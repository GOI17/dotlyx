#!/usr/bin/env zsh

CODELY_THEME_MINIMAL=${CODELY_THEME_MINIMAL:-false}
CODELY_THEME_MODE=${CODELY_THEME_MODE:-"dark"}
CODELY_THEME_PROMPT_IN_NEW_LINE=${CODELY_THEME_PROMPT_IN_NEW_LINE:-false}
CODELY_THEME_PWD_MODE=${CODELY_THEME_PWD_MODE:-"short"} # full, short, home_relative

CODELY_THEME_STATUS_ICON_OK=${CODELY_THEME_STATUS_ICON_OK:-"▸"}
CODELY_THEME_STATUS_ICON_KO=${CODELY_THEME_STATUS_ICON_KO:-"▪"}

[[ $(echotc Co) -gt 100 ]] && support_color_tones=true || support_color_tones=false

git_no_changes_status="✓"
git_dirty_status="✗"

if [ "$CODELY_THEME_MODE" = "dark" ]; then
  git_branch_color="green"
  git_dirty_status_color="yellow"
  git_no_changes_status_color="white"
  git_on_branch_color="white"
  pwd_color="yellow"
  diamond_color="white"
  status_icon_color_ok="green"
  status_icon_color_ko="red"
  [[ $support_color_tones = true ]] && ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8' || ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=magenta'
else
  git_branch_color="black"
  git_dirty_status_color="magenta"
  git_no_changes_status_color="green"
  git_on_branch_color="green"
  pwd_color="black"
  diamond_color="black"
  status_icon_color_ok="black"
  status_icon_color_ko="red"
  [[ $support_color_tones = true ]] && ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8' || ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=magenta'
fi

function short_pwd() {
	if [[ $(pwd) == "$HOME" ]]; then
	  echo "~"
	else
	  current_dir=$(pwd)
	  penultimate_dir=$(/usr/bin/basename "$(dirname "$current_dir")" | cut -c1-2)
	  path=$(dirname "$(dirname "$current_dir")" | sed "s|$HOME|~|g" | sed -E 's|/([^/])[^/]*|/\1|g')

	  echo "$path/$penultimate_dir/$(/usr/bin/basename "$current_dir")"
	fi
}

function prompt_codely_pwd() {
  case "$CODELY_THEME_PWD_MODE" in
    short) local -r prompt_dir=$(short_pwd) ;;
    full) local -r prompt_dir="$PWD" ;;
    home_relative) local -r prompt_dir=$(print -rD "$PWD") ;;
  esac

  print -n "%F{$pwd_color}$prompt_dir"
}

function prompt_git_info() {
  gitstatus_query 'dotlyxgit' || return 1
  
  local git_info=''
  
  if [[ $VCS_STATUS_RESULT == 'ok-sync' ]]; then
    # Branch name or commit hash if in detached HEAD
    if [[ -n $VCS_STATUS_LOCAL_BRANCH ]]; then
      git_info+="%F{cyan}${VCS_STATUS_LOCAL_BRANCH}"
    else
      git_info+="%F{cyan}${VCS_STATUS_COMMIT[1,8]}"
    fi
    
    # Clean/dirty status
    if (( VCS_STATUS_HAS_STAGED || VCS_STATUS_HAS_UNSTAGED || VCS_STATUS_HAS_UNTRACKED )); then
      git_info+=" %F{red}✗"  # Dirty indicator
    else
      git_info+=" %F{green}✓"  # Clean indicator
    fi
  fi
  
  echo -n $git_info
}

function prompt_git_setup() {
	RPS1="$(prompt_git_info)"
}

function prompt_codely_setup() {
	# Find gitstatus installation
	if [[ -f ${ANTIDOTE_DIR:-${XDG_CACHE_HOME:-$HOME/.cache}/antidote}/https-COLON--SLASH--SLASH-github.com-SLASH-romkatv-SLASH-gitstatus/gitstatus.plugin.zsh ]]; then
	    source ${ANTIDOTE_DIR:-${XDG_CACHE_HOME:-$HOME/.cache}/antidote}/https-COLON--SLASH--SLASH-github.com-SLASH-romkatv-SLASH-gitstatus/gitstatus.plugin.zsh
	fi

	# Initialize gitstatus
	gitstatus_stop 'dotlyxgit' && gitstatus_start 'dotlyxgit'

	local prompt_codely_status="%(?:%F{diamond_color}<%F{$status_icon_color_ok}$CODELY_THEME_STATUS_ICON_OK%F{diamond_color}>:%F{diamond_color}<%F{$status_icon_color_ko}$CODELY_THEME_STATUS_ICON_KO%F{diamond_color}>)"

	autoload -Uz add-zsh-hook && add-zsh-hook precmd prompt_git_setup
	
	if [ "$CODELY_THEME_MINIMAL" = true ]; then
		PS1="$prompt_codely_status $(prompt_codely_pwd) "
	else
		PS1="$prompt_codely_status $(prompt_codely_pwd) $(prompt_git_info)%f "
	fi

	if [ "$CODELY_THEME_PROMPT_IN_NEW_LINE" = true ]; then
		PS1="╭$PS1"$'\n%F{white}╰ '
	fi

	RPS1="";
}

prompt_codely_setup
